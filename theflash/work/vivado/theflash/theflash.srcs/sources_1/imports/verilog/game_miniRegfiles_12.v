/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_miniRegfiles_12 (
    input clk,
    input rst,
    input [4:0] write_address,
    input we,
    input [15:0] data,
    input [4:0] read_address_a,
    input [4:0] read_address_b,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [15:0] playerposition,
    output reg [15:0] e1position,
    output reg [15:0] e2position,
    output reg [15:0] e3position,
    output reg [15:0] e4position,
    output reg [15:0] e5position,
    output reg [15:0] e6position,
    output reg [15:0] e7position,
    output reg [15:0] e8position,
    output reg [15:0] e9position,
    output reg [15:0] e10position,
    output reg [15:0] e11position,
    output reg [15:0] e12position,
    output reg [15:0] e13position,
    output reg [15:0] e14position,
    output reg [15:0] e15position,
    output reg [15:0] e16position,
    output reg [15:0] playerscore,
    output reg [15:0] lives_left_output,
    output reg [15:0] slow_counter_output,
    output reg [15:0] difficulty_level_output
  );
  
  
  
  reg [15:0] M_player_position_d, M_player_position_q = 16'h8000;
  reg [15:0] M_e1_position_d, M_e1_position_q = 16'h001e;
  reg [15:0] M_e2_position_d, M_e2_position_q = 16'h001d;
  reg [15:0] M_e3_position_d, M_e3_position_q = 16'h001a;
  reg [15:0] M_e4_position_d, M_e4_position_q = 16'h000d;
  reg [15:0] M_e5_position_d, M_e5_position_q = 16'h000c;
  reg [15:0] M_e6_position_d, M_e6_position_q = 16'h000b;
  reg [15:0] M_e7_position_d, M_e7_position_q = 16'h0016;
  reg [15:0] M_e8_position_d, M_e8_position_q = 16'h0015;
  reg [15:0] M_e9_position_d, M_e9_position_q = 16'h000f;
  reg [15:0] M_e10_position_d, M_e10_position_q = 16'h0008;
  reg [15:0] M_e11_position_d, M_e11_position_q = 16'h0007;
  reg [15:0] M_e12_position_d, M_e12_position_q = 16'h0003;
  reg [15:0] M_e13_position_d, M_e13_position_q = 16'h0004;
  reg [15:0] M_e14_position_d, M_e14_position_q = 16'h0011;
  reg [15:0] M_e15_position_d, M_e15_position_q = 16'h0012;
  reg [15:0] M_e16_position_d, M_e16_position_q = 16'h0018;
  reg [15:0] M_player_score_d, M_player_score_q = 16'h0800;
  reg [15:0] M_difficulty_level_d, M_difficulty_level_q = 16'h0001;
  reg [15:0] M_fast_counter_d, M_fast_counter_q = 1'h0;
  reg [15:0] M_slow_counter_d, M_slow_counter_q = 1'h0;
  reg [15:0] M_lives_left_d, M_lives_left_q = 16'h0003;
  reg [15:0] M_player_won_d, M_player_won_q = 1'h0;
  reg [15:0] M_temp_reg1_d, M_temp_reg1_q = 1'h0;
  reg [15:0] M_temp_reg2_d, M_temp_reg2_q = 1'h0;
  reg [15:0] M_temp_reg3_d, M_temp_reg3_q = 1'h0;
  reg [15:0] M_temp_reg4_d, M_temp_reg4_q = 1'h0;
  reg [15:0] M_always_one_d, M_always_one_q = 16'h0001;
  reg [15:0] M_start_position_d, M_start_position_q = 16'h8000;
  reg [15:0] M_temp_reg7_d, M_temp_reg7_q = 1'h0;
  reg [15:0] M_temp_reg8_d, M_temp_reg8_q = 1'h0;
  reg [15:0] M_temp_reg9_d, M_temp_reg9_q = 1'h0;
  
  always @* begin
    M_start_position_d = M_start_position_q;
    M_temp_reg8_d = M_temp_reg8_q;
    M_e11_position_d = M_e11_position_q;
    M_temp_reg7_d = M_temp_reg7_q;
    M_temp_reg4_d = M_temp_reg4_q;
    M_temp_reg3_d = M_temp_reg3_q;
    M_temp_reg2_d = M_temp_reg2_q;
    M_e6_position_d = M_e6_position_q;
    M_temp_reg1_d = M_temp_reg1_q;
    M_e3_position_d = M_e3_position_q;
    M_player_won_d = M_player_won_q;
    M_fast_counter_d = M_fast_counter_q;
    M_e13_position_d = M_e13_position_q;
    M_player_position_d = M_player_position_q;
    M_e15_position_d = M_e15_position_q;
    M_e9_position_d = M_e9_position_q;
    M_e1_position_d = M_e1_position_q;
    M_e10_position_d = M_e10_position_q;
    M_temp_reg9_d = M_temp_reg9_q;
    M_always_one_d = M_always_one_q;
    M_difficulty_level_d = M_difficulty_level_q;
    M_e4_position_d = M_e4_position_q;
    M_player_score_d = M_player_score_q;
    M_lives_left_d = M_lives_left_q;
    M_slow_counter_d = M_slow_counter_q;
    M_e16_position_d = M_e16_position_q;
    M_e12_position_d = M_e12_position_q;
    M_e7_position_d = M_e7_position_q;
    M_e2_position_d = M_e2_position_q;
    M_e8_position_d = M_e8_position_q;
    M_e5_position_d = M_e5_position_q;
    M_e14_position_d = M_e14_position_q;
    
    M_always_one_d = 16'h0001;
    M_start_position_d = 16'h8000;
    lives_left_output = M_lives_left_q;
    slow_counter_output = M_slow_counter_q;
    difficulty_level_output = M_difficulty_level_q;
    if (we) begin
      
      case (write_address)
        5'h00: begin
          M_player_position_d = data;
        end
        5'h01: begin
          M_e1_position_d = data;
        end
        5'h02: begin
          M_e2_position_d = data;
        end
        5'h03: begin
          M_e3_position_d = data;
        end
        5'h04: begin
          M_e4_position_d = data;
        end
        5'h05: begin
          M_e5_position_d = data;
        end
        5'h06: begin
          M_e6_position_d = data;
        end
        5'h07: begin
          M_e7_position_d = data;
        end
        5'h08: begin
          M_e8_position_d = data;
        end
        5'h09: begin
          M_e9_position_d = data;
        end
        5'h0a: begin
          M_e10_position_d = data;
        end
        5'h0b: begin
          M_e11_position_d = data;
        end
        5'h0c: begin
          M_e12_position_d = data;
        end
        5'h0d: begin
          M_e13_position_d = data;
        end
        5'h0e: begin
          M_e14_position_d = data;
        end
        5'h0f: begin
          M_e15_position_d = data;
        end
        5'h10: begin
          M_e16_position_d = data;
        end
        5'h11: begin
          M_player_score_d = data;
        end
        5'h12: begin
          M_difficulty_level_d = data;
        end
        5'h13: begin
          M_fast_counter_d = data;
        end
        5'h14: begin
          M_slow_counter_d = data;
        end
        5'h15: begin
          M_lives_left_d = data;
        end
        5'h16: begin
          M_player_won_d = data;
        end
        5'h17: begin
          M_temp_reg1_d = data;
        end
        5'h18: begin
          M_temp_reg2_d = data;
        end
        5'h19: begin
          M_temp_reg3_d = data;
        end
        5'h1a: begin
          M_temp_reg4_d = data;
        end
        5'h1b: begin
          M_always_one_d = data;
        end
        5'h1c: begin
          M_start_position_d = data;
        end
        5'h1d: begin
          M_temp_reg7_d = data;
        end
        5'h1e: begin
          M_temp_reg8_d = data;
        end
        5'h1f: begin
          M_temp_reg9_d = data;
        end
      endcase
    end
    
    case (read_address_a)
      5'h00: begin
        out_a = M_player_position_q;
      end
      5'h01: begin
        out_a = M_e1_position_q;
      end
      5'h02: begin
        out_a = M_e2_position_q;
      end
      5'h03: begin
        out_a = M_e3_position_q;
      end
      5'h04: begin
        out_a = M_e4_position_q;
      end
      5'h05: begin
        out_a = M_e5_position_q;
      end
      5'h06: begin
        out_a = M_e6_position_q;
      end
      5'h07: begin
        out_a = M_e7_position_q;
      end
      5'h08: begin
        out_a = M_e8_position_q;
      end
      5'h09: begin
        out_a = M_e9_position_q;
      end
      5'h0a: begin
        out_a = M_e10_position_q;
      end
      5'h0b: begin
        out_a = M_e11_position_q;
      end
      5'h0c: begin
        out_a = M_e12_position_q;
      end
      5'h0d: begin
        out_a = M_e13_position_q;
      end
      5'h0e: begin
        out_a = M_e14_position_q;
      end
      5'h0f: begin
        out_a = M_e15_position_q;
      end
      5'h10: begin
        out_a = M_e16_position_q;
      end
      5'h11: begin
        out_a = M_player_score_q;
      end
      5'h12: begin
        out_a = M_difficulty_level_q;
      end
      5'h13: begin
        out_a = M_fast_counter_q;
      end
      5'h14: begin
        out_a = M_slow_counter_q;
      end
      5'h15: begin
        out_a = M_lives_left_q;
      end
      5'h16: begin
        out_a = M_player_won_q;
      end
      5'h17: begin
        out_a = M_temp_reg1_q;
      end
      5'h18: begin
        out_a = M_temp_reg2_q;
      end
      5'h19: begin
        out_a = M_temp_reg3_q;
      end
      5'h1a: begin
        out_a = M_temp_reg4_q;
      end
      5'h1b: begin
        out_a = M_always_one_q;
      end
      5'h1c: begin
        out_a = M_start_position_q;
      end
      5'h1d: begin
        out_a = M_temp_reg7_q;
      end
      5'h1e: begin
        out_a = M_temp_reg8_q;
      end
      5'h1f: begin
        out_a = M_temp_reg9_q;
      end
      default: begin
        out_a = 1'h0;
      end
    endcase
    
    case (read_address_b)
      5'h00: begin
        out_b = M_player_position_q;
      end
      5'h01: begin
        out_b = M_e1_position_q;
      end
      5'h02: begin
        out_b = M_e2_position_q;
      end
      5'h03: begin
        out_b = M_e3_position_q;
      end
      5'h04: begin
        out_b = M_e4_position_q;
      end
      5'h05: begin
        out_b = M_e5_position_q;
      end
      5'h06: begin
        out_b = M_e6_position_q;
      end
      5'h07: begin
        out_b = M_e7_position_q;
      end
      5'h08: begin
        out_b = M_e8_position_q;
      end
      5'h09: begin
        out_b = M_e9_position_q;
      end
      5'h0a: begin
        out_b = M_e10_position_q;
      end
      5'h0b: begin
        out_b = M_e11_position_q;
      end
      5'h0c: begin
        out_b = M_e12_position_q;
      end
      5'h0d: begin
        out_b = M_e13_position_q;
      end
      5'h0e: begin
        out_b = M_e14_position_q;
      end
      5'h0f: begin
        out_b = M_e15_position_q;
      end
      5'h10: begin
        out_b = M_e16_position_q;
      end
      5'h11: begin
        out_b = M_player_score_q;
      end
      5'h12: begin
        out_b = M_difficulty_level_q;
      end
      5'h13: begin
        out_b = M_fast_counter_q;
      end
      5'h14: begin
        out_b = M_slow_counter_q;
      end
      5'h15: begin
        out_b = M_lives_left_q;
      end
      5'h16: begin
        out_b = M_player_won_q;
      end
      5'h17: begin
        out_b = M_temp_reg1_q;
      end
      5'h18: begin
        out_b = M_temp_reg2_q;
      end
      5'h19: begin
        out_b = M_temp_reg3_q;
      end
      5'h1a: begin
        out_b = M_temp_reg4_q;
      end
      5'h1b: begin
        out_b = M_always_one_q;
      end
      5'h1c: begin
        out_b = M_start_position_q;
      end
      5'h1d: begin
        out_b = M_temp_reg7_q;
      end
      5'h1e: begin
        out_b = M_temp_reg8_q;
      end
      5'h1f: begin
        out_b = M_temp_reg9_q;
      end
      default: begin
        out_b = 1'h0;
      end
    endcase
    playerposition = M_player_position_q;
    e1position = M_e1_position_q;
    e2position = M_e2_position_q;
    e3position = M_e3_position_q;
    e4position = M_e4_position_q;
    e5position = M_e5_position_q;
    e6position = M_e6_position_q;
    e7position = M_e7_position_q;
    e8position = M_e8_position_q;
    e9position = M_e9_position_q;
    e10position = M_e10_position_q;
    e11position = M_e11_position_q;
    e12position = M_e12_position_q;
    e13position = M_e13_position_q;
    e14position = M_e14_position_q;
    e15position = M_e15_position_q;
    e16position = M_e16_position_q;
    playerscore = M_player_score_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_player_position_q <= 16'h8000;
      M_e1_position_q <= 16'h001e;
      M_e2_position_q <= 16'h001d;
      M_e3_position_q <= 16'h001a;
      M_e4_position_q <= 16'h000d;
      M_e5_position_q <= 16'h000c;
      M_e6_position_q <= 16'h000b;
      M_e7_position_q <= 16'h0016;
      M_e8_position_q <= 16'h0015;
      M_e9_position_q <= 16'h000f;
      M_e10_position_q <= 16'h0008;
      M_e11_position_q <= 16'h0007;
      M_e12_position_q <= 16'h0003;
      M_e13_position_q <= 16'h0004;
      M_e14_position_q <= 16'h0011;
      M_e15_position_q <= 16'h0012;
      M_e16_position_q <= 16'h0018;
      M_player_score_q <= 16'h0800;
      M_difficulty_level_q <= 16'h0001;
      M_fast_counter_q <= 1'h0;
      M_slow_counter_q <= 1'h0;
      M_lives_left_q <= 16'h0003;
      M_player_won_q <= 1'h0;
      M_temp_reg1_q <= 1'h0;
      M_temp_reg2_q <= 1'h0;
      M_temp_reg3_q <= 1'h0;
      M_temp_reg4_q <= 1'h0;
      M_always_one_q <= 16'h0001;
      M_start_position_q <= 16'h8000;
      M_temp_reg7_q <= 1'h0;
      M_temp_reg8_q <= 1'h0;
      M_temp_reg9_q <= 1'h0;
    end else begin
      M_player_position_q <= M_player_position_d;
      M_e1_position_q <= M_e1_position_d;
      M_e2_position_q <= M_e2_position_d;
      M_e3_position_q <= M_e3_position_d;
      M_e4_position_q <= M_e4_position_d;
      M_e5_position_q <= M_e5_position_d;
      M_e6_position_q <= M_e6_position_d;
      M_e7_position_q <= M_e7_position_d;
      M_e8_position_q <= M_e8_position_d;
      M_e9_position_q <= M_e9_position_d;
      M_e10_position_q <= M_e10_position_d;
      M_e11_position_q <= M_e11_position_d;
      M_e12_position_q <= M_e12_position_d;
      M_e13_position_q <= M_e13_position_d;
      M_e14_position_q <= M_e14_position_d;
      M_e15_position_q <= M_e15_position_d;
      M_e16_position_q <= M_e16_position_d;
      M_player_score_q <= M_player_score_d;
      M_difficulty_level_q <= M_difficulty_level_d;
      M_fast_counter_q <= M_fast_counter_d;
      M_slow_counter_q <= M_slow_counter_d;
      M_lives_left_q <= M_lives_left_d;
      M_player_won_q <= M_player_won_d;
      M_temp_reg1_q <= M_temp_reg1_d;
      M_temp_reg2_q <= M_temp_reg2_d;
      M_temp_reg3_q <= M_temp_reg3_d;
      M_temp_reg4_q <= M_temp_reg4_d;
      M_always_one_q <= M_always_one_d;
      M_start_position_q <= M_start_position_d;
      M_temp_reg7_q <= M_temp_reg7_d;
      M_temp_reg8_q <= M_temp_reg8_d;
      M_temp_reg9_q <= M_temp_reg9_d;
    end
  end
  
endmodule
