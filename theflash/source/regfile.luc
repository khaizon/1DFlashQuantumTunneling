module regfile (
    input clk,
    input [15:0] read_address_1,
    input [15:0] read_address_2,
    input [15:0] read_address_3,
    output reg [15:0] read_data_1,
    output reg [15:0] read_data_2,
    output reg [15:0] read_data_3,
    output reg [15:0] player_position,
    output reg [15:0] enemy_position,
    input [15:0] write_address,
    input [15:0] write_data,
    input write_enable
  );
  
  
  
  reg [1023:0] M_registers_d, M_registers_q = 1'h0;
  
  always @* begin
    M_registers_d = M_registers_q;
    
    read_data_1 = M_registers_q[(read_address_1)*32+31-:32];
    read_data_2 = M_registers_q[(read_address_2)*32+31-:32];
    if (write_address != 5'h1f && write_enable) begin
      M_registers_d[(write_address)*32+31-:32] = write_data;
    end
    if (read_address_1 == 5'h1f) begin
      read_data_1 = 16'h0000;
    end
    if (read_address_2 == 5'h1f) begin
      read_data_2 = 16'h0000;
    end
  end
  
  always @(posedge clk) begin
    M_registers_q <= M_registers_d;
  end
  
endmodule